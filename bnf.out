State 0:
          grammar ::= * rules
      (1) rules ::= *
          rules ::= * rules rule

                       grammar accept
                         rules shift  1
                     {default} reduce 1

State 1:
      (0) grammar ::= rules *
          rules ::= rules * rule
          rule ::= * PRAGMA_INCLUDE LCURL text RCURL
          rule ::= * PRAGMA_NAME LCURL text RCURL
          rule ::= * PRAGMA_TYPE WORD LCURL text RCURL
          rule ::= * PRAGMA_DESTRUCTOR WORD LCURL text RCURL
          rule ::= * PRAGMA_FALLBACK WORD word_list DOT
          rule ::= * PRAGMA_START_SYMBOL WORD
          rule ::= * PRAGMA
          rule ::= * PRAGMA LCURL text RCURL
          rule ::= * left IS right DOT action
          left ::= * WORD specifier

                             $ reduce 0
                PRAGMA_INCLUDE shift  33
                   PRAGMA_NAME shift  32
                   PRAGMA_TYPE shift  31
                          WORD shift  4
             PRAGMA_DESTRUCTOR shift  29
               PRAGMA_FALLBACK shift  27
           PRAGMA_START_SYMBOL shift  26
                        PRAGMA shift  25
                          rule shift  50
                          left shift  24

State 2:
          rule ::= left IS * right DOT action
          right ::= * rightlist
     (16) rightlist ::= *
          rightlist ::= * rightlist WORD specifier

                         right shift  23
                     rightlist shift  22
                     {default} reduce 16

State 3:
          action ::= LCURL * RCURL
          action ::= LCURL * text RCURL
          text ::= * TEXT
          text ::= * text TEXT

                         RCURL shift  38
                          TEXT shift  47
                          text shift  13

State 4:
          left ::= WORD * specifier
     (18) specifier ::= *
          specifier ::= * LPAREN WORD RPAREN

                        LPAREN shift  21
                     specifier shift  34
                     {default} reduce 18

State 5:
          rightlist ::= rightlist WORD * specifier
     (18) specifier ::= *
          specifier ::= * LPAREN WORD RPAREN

                        LPAREN shift  21
                     specifier shift  36
                     {default} reduce 18

State 6:
          rule ::= left IS right DOT * action
     (20) action ::= *
          action ::= * LCURL RCURL
          action ::= * LCURL text RCURL

                         LCURL shift  3
                        action shift  39
                     {default} reduce 20

State 7:
          rule ::= PRAGMA LCURL * text RCURL
          text ::= * TEXT
          text ::= * text TEXT

                          TEXT shift  47
                          text shift  14

State 8:
          rule ::= PRAGMA_DESTRUCTOR WORD LCURL * text RCURL
          text ::= * TEXT
          text ::= * text TEXT

                          TEXT shift  47
                          text shift  16

State 9:
          rule ::= PRAGMA_TYPE WORD LCURL * text RCURL
          text ::= * TEXT
          text ::= * text TEXT

                          TEXT shift  47
                          text shift  17

State 10:
          rule ::= PRAGMA_NAME LCURL * text RCURL
          text ::= * TEXT
          text ::= * text TEXT

                          TEXT shift  47
                          text shift  18

State 11:
          rule ::= PRAGMA_INCLUDE LCURL * text RCURL
          text ::= * TEXT
          text ::= * text TEXT

                          TEXT shift  47
                          text shift  19

State 12:
          rule ::= PRAGMA_FALLBACK WORD * word_list DOT
      (8) word_list ::= *
          word_list ::= * word_list WORD

                     word_list shift  15
                     {default} reduce 8

State 13:
          action ::= LCURL text * RCURL
          text ::= text * TEXT

                         RCURL shift  37
                          TEXT shift  48

State 14:
          rule ::= PRAGMA LCURL text * RCURL
          text ::= text * TEXT

                         RCURL shift  40
                          TEXT shift  48

State 15:
          rule ::= PRAGMA_FALLBACK WORD word_list * DOT
          word_list ::= word_list * WORD

                          WORD shift  42
                           DOT shift  43

State 16:
          rule ::= PRAGMA_DESTRUCTOR WORD LCURL text * RCURL
          text ::= text * TEXT

                         RCURL shift  44
                          TEXT shift  48

State 17:
          rule ::= PRAGMA_TYPE WORD LCURL text * RCURL
          text ::= text * TEXT

                         RCURL shift  45
                          TEXT shift  48

State 18:
          rule ::= PRAGMA_NAME LCURL text * RCURL
          text ::= text * TEXT

                         RCURL shift  46
                          TEXT shift  48

State 19:
          rule ::= PRAGMA_INCLUDE LCURL text * RCURL
          text ::= text * TEXT

                         RCURL shift  49
                          TEXT shift  48

State 20:
          specifier ::= LPAREN WORD * RPAREN

                        RPAREN shift  35

State 21:
          specifier ::= LPAREN * WORD RPAREN

                          WORD shift  20

State 22:
     (15) right ::= rightlist *
          rightlist ::= rightlist * WORD specifier

                          WORD shift  5
                     {default} reduce 15

State 23:
          rule ::= left IS right * DOT action

                           DOT shift  6

State 24:
          rule ::= left * IS right DOT action

                            IS shift  2

State 25:
     (11) rule ::= PRAGMA *
          rule ::= PRAGMA * LCURL text RCURL

                         LCURL shift  7
                     {default} reduce 11

State 26:
          rule ::= PRAGMA_START_SYMBOL * WORD

                          WORD shift  41

State 27:
          rule ::= PRAGMA_FALLBACK * WORD word_list DOT

                          WORD shift  12

State 28:
          rule ::= PRAGMA_DESTRUCTOR WORD * LCURL text RCURL

                         LCURL shift  8

State 29:
          rule ::= PRAGMA_DESTRUCTOR * WORD LCURL text RCURL

                          WORD shift  28

State 30:
          rule ::= PRAGMA_TYPE WORD * LCURL text RCURL

                         LCURL shift  9

State 31:
          rule ::= PRAGMA_TYPE * WORD LCURL text RCURL

                          WORD shift  30

State 32:
          rule ::= PRAGMA_NAME * LCURL text RCURL

                         LCURL shift  10

State 33:
          rule ::= PRAGMA_INCLUDE * LCURL text RCURL

                         LCURL shift  11

State 34:
     (14) left ::= WORD specifier *

                     {default} reduce 14

State 35:
     (19) specifier ::= LPAREN WORD RPAREN *

                     {default} reduce 19

State 36:
     (17) rightlist ::= rightlist WORD specifier *

                     {default} reduce 17

State 37:
     (22) action ::= LCURL text RCURL *

                     {default} reduce 22

State 38:
     (21) action ::= LCURL RCURL *

                     {default} reduce 21

State 39:
     (13) rule ::= left IS right DOT action *

                     {default} reduce 13

State 40:
     (12) rule ::= PRAGMA LCURL text RCURL *

                     {default} reduce 12

State 41:
     (10) rule ::= PRAGMA_START_SYMBOL WORD *

                     {default} reduce 10

State 42:
      (9) word_list ::= word_list WORD *

                     {default} reduce 9

State 43:
      (7) rule ::= PRAGMA_FALLBACK WORD word_list DOT *

                     {default} reduce 7

State 44:
      (6) rule ::= PRAGMA_DESTRUCTOR WORD LCURL text RCURL *

                     {default} reduce 6

State 45:
      (5) rule ::= PRAGMA_TYPE WORD LCURL text RCURL *

                     {default} reduce 5

State 46:
      (4) rule ::= PRAGMA_NAME LCURL text RCURL *

                     {default} reduce 4

State 47:
     (23) text ::= TEXT *

                     {default} reduce 23

State 48:
     (24) text ::= text TEXT *

                     {default} reduce 24

State 49:
      (3) rule ::= PRAGMA_INCLUDE LCURL text RCURL *

                     {default} reduce 3

State 50:
      (2) rules ::= rules rule *

                     {default} reduce 2

----------------------------------------------------
Symbols:
    0: $:
    1: PRAGMA_INCLUDE
    2: LCURL
    3: RCURL
    4: PRAGMA_NAME
    5: PRAGMA_TYPE
    6: WORD
    7: PRAGMA_DESTRUCTOR
    8: PRAGMA_FALLBACK
    9: DOT
   10: PRAGMA_START_SYMBOL
   11: PRAGMA
   12: PRAGMA_TOKEN_TYPE
   13: PRAGMA_TOKEN_DESTRUCTOR
   14: PRAGMA_EXTRA_ARGUMENT
   15: PRAGMA_SYNTAX_ERROR
   16: IS
   17: LPAREN
   18: RPAREN
   19: TEXT
   20: error:
   21: grammar: <lambda> PRAGMA_INCLUDE PRAGMA_NAME PRAGMA_TYPE WORD PRAGMA_DESTRUCTOR PRAGMA_FALLBACK PRAGMA_START_SYMBOL PRAGMA
   22: rules: <lambda> PRAGMA_INCLUDE PRAGMA_NAME PRAGMA_TYPE WORD PRAGMA_DESTRUCTOR PRAGMA_FALLBACK PRAGMA_START_SYMBOL PRAGMA
   23: rule: PRAGMA_INCLUDE PRAGMA_NAME PRAGMA_TYPE WORD PRAGMA_DESTRUCTOR PRAGMA_FALLBACK PRAGMA_START_SYMBOL PRAGMA
   24: text: TEXT
   25: word_list: <lambda> WORD
   26: left: WORD
   27: right: <lambda> WORD
   28: action: <lambda> LCURL
   29: specifier: <lambda> LPAREN
   30: rightlist: <lambda> WORD
